snippet		dep
abbr		DependencyProperty
	#region ${1:property_name}
	public ${2:property_type} $1
	{
		get { return ($2)GetValue($1Property); }
		set { SetValue($1Property, value); }
	}

	public static readonly DependencyProperty $1Property =
		DependencyProperty.Register(
			"$1",
			typeof($2),
			typeof(${3:owner_class}),
			new FrameworkPropertyMetadata
			{
				DefaultValue            = default($2),
				BindsTwoWayByDefault    = true,
				PropertyChangedCallback = On$1Changed
			}
		);

	private static void On$1Changed(DependencyObject d, DependencyPropertyChangedEventArgs e)
	{
	}
	#endregion
	${0}

snippet		props
abbr		Property (SetProperty)
	#region ${1:property_name}
	private ${2:property_type} _$1;
	public $2 $1
	{
		get { return _$1; }
		set { SetProperty(ref _$1, value); }
	}
	#endregion
	${0}

# snippet		propa
# abbr		Property (RaisePropertyChanged)
# 	#region ${1:property_name}
# 	private ${2:property_type} _$1;
# 	public $2 $1
# 	{
# 		get { return _$1; }
# 		set
# 		{ 
# 			if (_$1 == value)
# 				return;
#
# 			_$1 = value;
# 			RaisePropertyChanged(() => $1);
# 		}
# 	}
# 	#endregion
# 	${0}

snippet		comv
abbr		Property (ViewModelCommand)
	#region ${1:command_name}Command
	private ViewModelCommand _$1Command;
	public ViewModelCommand $1Command
	{
		get { return _$1Command ?? (_$1Command = new ViewModelCommand($1, Can$1)); }
	}

	private void $1()
	{
	}

	private bool Can$1()
	{
		 return true;
	}
	#endregion
	${0}

snippet		coml
abbr		Property (ListenerCommand)
	#region ${1:command_name}Command
	private ListenerCommand<${2:message_type}> _$1Command;
	public ListenerCommand<$2> $1Command
	{
		get { return _$1Command ?? (_$1Command = new ListenerCommand<$2>($1, Can$1)); }
	}

	private void $1($2 message)
	{
	}

	private bool Can$1()
	{
		 return true;
	}
	#endregion
	${0}

snippet		singleton
abbr		Singleton
	private ${1:class_name}(){}
	private static readonly $1 _instance = new $1();
	public static $1 Instance
	{
		get { return _instance; }
	}
	${0}
